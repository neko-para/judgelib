#!/bin/bash
if [ ! -d .git ]; then
	git clone https://github.com/neko-para/judgelib.git
	cd judgelib
	exec bash gen
fi

CC=gcc
AS=as
BIT=$1

if [ -z "$BIT" ]; then
	BIT=64
fi
CFLAGS="$CFLAGS -fPIC -Wall -Wextra -g -m$BIT -D_JUDGE_BIT_=$BIT"

mkdir -p .build

for i in *.c; do
	j=$(echo $i | sed 's/\.c//')
	SYS=("${SYS[@]}" "$j")
	SYSOBJ=("${SYSOBJ[@]}" ".build/$j.o")
done

cat > Makefile << EOF
BIT=${BIT}
PREFIX=/usr/local/judgelib

all: Makefile libjudge.so crt.o

32:
	@if [ \$(BIT) != 32 ]; then echo "Switch to 32 bit"; ./gen 32; fi
	@make

64:
	@if [ \$(BIT) != 64 ]; then echo "Switch to 64 bit"; ./gen 64; fi
	@make

Makefile: gen
	@./gen \$(BIT)
	@make

clean:
	@-rm -f libjudge.so
	@-rm -f ${SYSOBJ[@]} test crt.o

install: all
	@echo "Make directory"
	@mkdir -p \$(PREFIX)
	@mkdir -p \$(PREFIX)/include
	@mkdir -p \$(PREFIX)/lib
	@echo "Install headers"
	@for i in *.h; do install \$\$i \$(PREFIX)/include/\$\$i; chmod 644 \$(PREFIX)/include/\$\$i; done
	@rm \$(PREFIX)/include/syscall.h
	@echo "Install core library"
	@install crt.o \$(PREFIX)/lib/crt.o
	@install libjudge.so \$(PREFIX)/lib/libjudge.so

crt.o: Makefile crt${BIT}.s
	@echo "Build crt.o"
	@$AS -o crt.o crt${BIT}.s --${BIT} 2>> log

test: Makefile test.cpp crt.o
	@echo "Link test"
	@$CC -o test test.cpp crt.o ${CFLAGS} ${LDFLAGS} -nostdlib -I. -L. -ljudge -Wl,--rpath=. -fno-builtin-printf 2>> log

libjudge.so: ${SYSOBJ[@]}
	@echo -e "\\rLink libjudge.so"
	@$CC -shared -o libjudge.so ${SYSOBJ[@]} ${CFLAGS} ${LDFLAGS} -lm 2>> log

update:
	@if [ -d .git ]; then git pull; fi

help:
	@echo "make all -> Build libjudge.so & crt.o (default)"
	@echo "make clean -> Clean objects & libraries"
	@echo "make test -> Build test"
	@echo "make install -> Install librarys to ${PREFIX}"
	@echo "make 32 -> Specify to build 32 version"
	@echo "make 64 -> Specify to build 64 version"
	@echo "make update -> Update the source (need git)"
	@echo "make help -> Show this help"

EOF
echo Build deps
mkdir -p .build
for i in ${SYS[@]}; do
	echo -n -e "\\rBuild $i deps     "
	dep=(`\$CC -MM $i.c | sed 's/\\\\//' | sed 's/.*://'`)
	cat >> Makefile << EOF
.build/$i.o: ${dep[@]} Makefile
	@echo -n "\\rBuild $i.o"
	@$CC -c -o .build/$i.o $i.c ${CFLAGS} 2>> log

EOF
done
echo -e "\\rBuild deps success"