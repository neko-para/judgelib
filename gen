#!/bin/bash
CC=gcc
BIT=$1

if [ -z "$BIT" ]; then
	BIT=64
fi
CFLAGS="$CFLAGS -fPIC -g -m$BIT -D_JUDGE_BIT_=$BIT"

mkdir -p .build

for i in *.c; do
	j=$(echo $i | sed 's/\.c//')
	SYS=("${SYS[@]}" "$j")
	SYSOBJ=("${SYSOBJ[@]}" ".build/$j.o")
done

cat > Makefile << EOF
PREFIX=/usr/local/judgelib

all: libjudge.so test

clean:
	-rm -f libjudge.so
	-rm -f ${SYSOBJ[@]} test crt.o syscall.o

install: all
	mkdir -p \$(PREFIX)
	mkdir -p \$(PREFIX)/include
	mkdir -p \$(PREFIX)/lib
	for i in *.h; do install \$\$i \$(PREFIX)/include/\$\$i; chmod 644 \$(PREFIX)/include/\$\$i; done
	rm \$(PREFIX)/include/syscall.h
	install crt.o \$(PREFIX)/lib/crt.o
	install libjudge.so \$(PREFIX)/lib/libjudge.so

crt.o: crt${BIT}.s
	as -o \$@ \$< --${BIT}

syscall.o: syscall${BIT}.s
	as -o \$@ \$< --${BIT}

test: test.cpp crt.o
	$CC -o \$@ \$^ ${CFLAGS} ${LDFLAGS} -nostdlib -I. -L. -ljudge -Wl,--rpath=.

libjudge.so: ${SYSOBJ[@]} syscall.o
	$CC -shared -o \$@ \$^ ${CFLAGS} ${LDFLAGS}

EOF

echo Building deps
mkdir -p .build
for i in ${SYS[@]}; do
	echo Building $i deps
	dep=(`gcc -MM $i.c | sed 's/.*://'`)
	cat >> Makefile << EOF
.build/${i}.o: ${dep[@]}
	$CC -c -o \$@ \$< ${CFLAGS}
EOF
done