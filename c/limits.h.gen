#!/bin/bash
CC=gcc
BIT=$1
if [ -z "$BIT" ]; then
	BIT=32
fi
CFLAGS="$CFLAGS -m$BIT"

function getmacro {
	cat > "temp.c" << EOF
#include <limits.h>
#include <stdio.h>

int main() {
	printf("($3)$2", ($3)$1);
}
EOF
	$CC temp.c -o temp $CFLAGS
	echo >> limits.h "#define $1 (`./temp``echo $3 | sed -n 's/[^l]//pg'`)"
}

echo > limits.h "#ifndef _LIMITS_H_"
echo >> limits.h "#define _LIMITS_H_"
echo >> limits.h
getmacro CHAR_BIT %d int
getmacro SCHAR_MIN %d int
getmacro SCHAR_MAX %d int
for i in CHAR SHRT INT; do
	getmacro ${i}_MIN %d int
	getmacro ${i}_MAX %d int
	getmacro U${i}_MAX %u unsigned
done
getmacro LONG_MIN %#lx long
getmacro LONG_MAX %#lx long
getmacro ULONG_MAX %#lx "unsigned long"
getmacro LLONG_MIN %#llx "long long"
getmacro LLONG_MAX %#llx "long long"
getmacro ULLONG_MAX %#llx "unsigned long long"
rm temp temp.c
echo >> limits.h
echo -n >> limits.h "#endif"