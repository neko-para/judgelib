#!/bin/bash
CC=gcc
BIT=$1
if [ -z "$BIT" ]; then
	BIT=32
fi
CFLAGS="$CFLAGS -m$BIT"

function getmacro {
	cat > temp.c << EOF
#include <float.h>
#include <stdio.h>

int main() {
	printf("$2", ($3)$1);
}
EOF
	$CC temp.c -o temp $CFLAGS
	echo >> float.h "#define $1 `./temp`$4"
}

echo > float.h "#ifndef _FLOAT_H_"
echo >> float.h "#define _FLOAT_H_"
echo >> float.h
getmacro FLT_RADIX %d int
getmacro FLT_ROUNDS %d int
for i in FLT DBL LDBL; do
	getmacro ${i}_MANT_DIG %d int
	getmacro ${i}_DIG %d int
	getmacro ${i}_MIN_EXP %d int
	getmacro ${i}_MIN_10_EXP %d int
	getmacro ${i}_MAX_EXP %d int
	getmacro ${i}_MAX_10_EXP %d int
	getmacro ${i}_MAX %LE "long double"
	getmacro ${i}_MIN %LE "long double"
	getmacro ${i}_EPSILON %LE "long double"
done
rm temp temp.c
echo >> float.h
echo -n >> float.h "#endif"